// Generated by CoffeeScript 1.12.7

(function() {
  var CreateAccount, ActValid, API, $, Apps, BanAccount, BatAccount, ChannelUrl, DataVer, DeviceTrans, GagAccount, IAPQuery, Login, Mail, NickName, ProfileQuery, ProfileTrans, RankDel, React, ReactCookie, ReactDOM, ShardMng, ShardShowState, Siders, SysPublic, SysRollNotice, VirIAP, activity_commands, antd, auth_commands, func_commands, server_commands;

  antd = require('antd');

  ReactDOM = require('react-dom');

  React = require('react');

  require('antd/lib/index.css');

  require('bootstrap/dist/css/bootstrap.min.css');

  require('jsoneditor/dist/jsoneditor.min.css');

  Mail = require('./tools/mail_all/index');

  VirIAP = require('./tools/vir_iap/index');

  SysRollNotice = require('./tools/sys_roll_notice/index');

  SysPublic = require('./tools/public/index');

  BanAccount = require('./tools/ban_account/index');

  Login = require('./login/login');

  ProfileQuery = require('./tools/profile_query/index');

  GagAccount = require('./tools/gag_account/index');

  BatAccount = require('./tools/bat_account/index');

  NickName = require('./tools/nickname/index');

  ChannelUrl = require('./tools/channelurl/index');

  IAPQuery = require('./tools/iap_query/index');

  ShardMng = require('./tools/shard_mng/index');

  ShardShowState = require('./tools/shard_show_state/index');

  ActValid = require('./tools/act_valid/index');

  DataVer = require('./tools/data_ver/index');

  RankDel = require('./tools/rank_del/index');

  ProfileTrans = require('./tools/trans_account/index');

  DeviceTrans = require('./tools/trans_device/index');

  ReactCookie = require('react-cookie');

  $ = require('jquery');

  API = require('./tools/api/api_ajax');

  CreateAccount = require('./tools/create_account/create_account');

    func_commands = {
    "账号管理": CreateAccount,
    "昵称/ID查询": NickName,
    "单人邮件": Mail.MailOne,
    "全服邮件": Mail.MailAll,
    "批量邮件": Mail.MailBatch,
    "虚拟充值": VirIAP,
    "跑马灯公告": SysRollNotice,
    "公告": SysPublic,
    "封禁账号": BanAccount,
    "禁言账号": GagAccount,
    "批量封禁": BatAccount,
    "账号查询": ProfileQuery,
    "账号转移": ProfileTrans,
    "渠道链接": ChannelUrl,
    "支付查询": IAPQuery,
    "Shard管理": ShardMng,
    "Shard状态标签": ShardShowState,
    "活动开关": ActValid,
    "数据版本": DataVer,
    "删除排行榜": RankDel,
    "设备转移": DeviceTrans
  };

  activity_commands = {};

  server_commands = {};

  auth_commands = {};

  Siders = require('./common/siders');

  Apps = React.createClass({displayName: "Apps",

    getInitialState: function() {
        $.get("../api/v1/init", (function(_this) {
            return function(result) {
                var serv;
                serv = JSON.parse(result);
                console.log(_this);
                console.log(serv);
                if (serv.TimeZone === "Asia/Ho_Chi_Minh"){
                    return _this.setState({
                        curr_time:7,
                    })
                }else if (serv.TimeZone === "Asia/Shanghai"){
                    return _this.setState({
                        curr_time:8,
                  })
                }else if (serv.TimeZone === "Asia/Seoul"){
                    return _this.setState({
                        curr_time:9,
                    })
                }
            };
        })(this));
        return {
        curr: null,
        curr_title: "",
        curr_key: ReactCookie.load('taihe-gm-tool-key'),
        curr_time:"",
      };

    },

    handleServerChange: function(e) {
      var curr;
      this.setState({
        curr_server: e
      });
      curr = this.getCurrApp();
      console.log("handleServerChange ", this.refs.curr_app, this.refs.curr_app.handleServerChange);
      return this.refs.curr_app.handleServerChange(e);
    },

      handleTimeServerChange:function (e) {
          var curr;
          this.setState({
              curr_time:e
          });
          curr = this.getCurrApp();
      },

    handleKeyChange: function(e) {
      var curr;
      if (e === "") {
        return;
      }
      this.setState({
        curr_key: e
      });
      ReactCookie.save('taihe-gm-tool-key', e, {
        path: '/',
        maxAge: 3600
      });
      curr = this.getCurrApp();
      return console.log("handleKeyChange ", this.state.curr_key);
    },
    handleSiderClick: function(e) {
      console.log("handleServerChange", func_commands[e.key]);
      return this.setState({
        curr: func_commands[e.key],
        curr_title: e.key
      });
    },
    handleLogout: function() {
      this.setState({
        curr_key: ""
      });
      return ReactCookie.save('taihe-gm-tool-key', "", {
        path: '/'
      });
    },
    getCurrApp: function() {
      var Curr;
      Curr = this.state.curr;
      if ((this.state.curr_key == null) || this.state.curr_key === "") {
        return React.createElement(Login, {
          "onChange": this.handleKeyChange
        });
      }
      if (Curr != null) {
        return React.createElement(Curr, {
          "ref": "curr_app",
          "curr_server": this.state.curr_server,
          "curr_key": this.state.curr_key,
          "curr_time":this.state.curr_time,
        });
      } else {
        return React.createElement("div", null, "请选择功能");
      }
    },
    render: function() {

      return React.createElement("div", {
        "className": "row-flex row-flex-start"
      }, React.createElement("div", null, React.createElement(Siders.Sider, {
        "handleClick": this.handleSiderClick,
        "func_commands": func_commands,
        "activity_commands": activity_commands,
        "server_commands": server_commands,
        "auth_commands": auth_commands
      })), React.createElement("div", {
        "className": "col-offset-1"
      }, React.createElement(Siders.StateMenu, {
        "handleServerChange": this.handleServerChange,
        "handleLogout": this.handleLogout,
        "handleTimeServerChange":this.handleTimeServerChange,
        "className": "row"
      }), React.createElement("h3", {
        "type": "info"
      }, this.state.curr_title), React.createElement("hr", null), this.getCurrApp(), React.createElement("hr", null)));

  }
  });

  ReactDOM.render(React.createElement(Apps, null), document.getElementById('react-content'));

}).call(this);
