// Generated by CoffeeScript 1.12.7
(function() {
  var Api, Modal, NamePassCreater, React, antd;

  antd = require('antd');

  React = require('react');

  Modal = antd.Modal;

  Api = require('../api/api_ajax');

  NamePassCreater = React.createClass({displayName: "NamePassCreater",
    getInitialState: function() {
      return {
        loading: false,
        visible: false,
        user_id: "",
        name: ""
      };
    },
    showModal: function() {
      return this.setState({
        visible: true
      });
    },
    handleOk: function() {
      this.setState({
        loading: true
      });
      this.setState({
        loading: false,
        visible: false
      });
      return this.send();
    },
    handleCancel: function() {
      return this.setState({
        visible: false
      });
    },
    send: function() {
      var api;
      api = new Api();
      console.log(this.state.send);
      return api.Typ("createNamePassForUID").ServerID("SID").AccountID(this.state.user_id).Key(this.props.curr_key).Params(this.state.name).Do((function(_this) {
        return function(result) {
          console.log("on createNamePassForUID");
          return console.log(result);
        };
      })(this));
    },
    handleUserIDChange: function(event) {
      return this.setState({
        user_id: event.target.value
      });
    },
    handleNameChange: function(event) {
      return this.setState({
        name: event.target.value
      });
    },
    render: function() {
      var base;
      return React.createElement("div", null, React.createElement("button", {
        "className": "ant-btn ant-btn-primary",
        "onClick": this.showModal
      }, "绑定UId到用户名"), React.createElement(Modal, {
        "ref": "modal",
        "visible": this.state.visible,
        "title": "绑定UId到用户名",
        "onOk": this.handleOk,
        "onCancel": this.handleCancel,
        "width": 700,
        "footer": [
          React.createElement("button", {
            "key": "back",
            "className": "ant-btn",
            "onClick": this.handleCancel
          }, "返 回"), React.createElement("button", {
            "key": "submit",
            "className": "ant-btn ant-btn-primary",
            "onClick": this.handleOk
          }, "提 交", React.createElement("i", {
            "className": 'anticon anticon-loading' + (typeof (base = this.state).loading === "function" ? base.loading({
              '': 'hide'
            }) : void 0)
          }))
        ]
      }, React.createElement("div", null, "注意:绑绑定UId到用户名之前要查询用户名是否存在, 如果用户名存在, 会覆盖原有信息. 这里会将密码重置为1, 建议不要覆盖原有用户名"), React.createElement("div", {
        "className": "row-flex row-flex-middle row-flex-start"
      }, React.createElement("div", null, "UserID(xx-xx-xx):"), React.createElement("input", {
        "className": "ant-input ",
        "onChange": this.handleUserIDChange
      })), React.createElement("div", {
        "className": "row-flex row-flex-middle row-flex-start"
      }, React.createElement("div", null, "Name:"), React.createElement("input", {
        "className": "ant-input ",
        "onChange": this.handleNameChange
      }))));
    }
  });

  module.exports = NamePassCreater;

}).call(this);
