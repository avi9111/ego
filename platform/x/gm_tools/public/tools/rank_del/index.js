// Generated by CoffeeScript 1.12.7
(function() {
  var AccountKeyInput, Api, App, Button, Col, Form, FormItem, Input, React, ReactBootstrap, Row, antd;

  antd = require('antd');

  Api = require('../api/api_ajax');

  React = require('react');

  AccountKeyInput = require('../../common/account_input');

  ReactBootstrap = require('react-bootstrap');

  Button = ReactBootstrap.Button;

  Row = antd.Row;

  Col = antd.Col;

  Form = antd.Form;

  FormItem = antd.Form.Item;

  Input = antd.Input;

  Button = antd.Button;

  App = React.createClass({displayName: "App",
    getInitialState: function() {
      return {
        select_server: this.props.curr_server,
        player_to_send: "",
        rank_name: "",
        param: ""
      };
    },
    handleUserChange: function(data) {
      console.log(data);
      if (data === "") {
        data = "请输入玩家Id";
      }
      return this.setState({
        player_to_send: data
      });
    },
    handleServerChange: function(data) {
      console.log(data);
      return this.setState({
        select_server: data
      });
    },
    validationState: function(data) {
      if (!this.state.rank_name) {
        return 'error';
      }
      return 'success';
    },
    rank_delete: function() {
      var api;
      console.log(this.state.select_server);
      api = new Api();
      return api.Typ("delRank").ServerID(this.state.select_server.serverName).AccountID(this.state.player_to_send).Key(this.props.curr_key).Params(this.state.rank_name, this.state.param).Do((function(_this) {
        return function(result) {
          return console.log(result);
        };
      })(this));
    },
    rank_reload: function() {
      var api;
      api = new Api();
      return api.Typ("reloadRank").ServerID(this.state.select_server.serverName).AccountID(this.state.player_to_send).Key(this.props.curr_key).ParamArray().Do((function(_this) {
        return function(result) {
          return console.log(result);
        };
      })(this));
    },
    handleChange: function(event) {
      return this.setState({
        rank_name: event.target.value
      });
    },
    handleParamChange: function(event) {
      return this.setState({
        param: event.target.value
      });
    },
    render: function() {
      return React.createElement("div", null, React.createElement("p", null, "说明："), React.createElement("p", null, "【删除排行榜】：会删除数据库中对应的角色id，并重新加载排行榜，非专业人士，请勿操作！"), React.createElement(Form, {
        "inline": true,
        "onSubmit": this.handleSubmit_data
      }, React.createElement(FormItem, {
        "label": "排行榜:"
      }, React.createElement(ReactBootstrap.Input, {
        "type": 'text',
        "className": "col-offset-1",
        "placeholder": "",
        "style": {
          width: 243
        },
        "bsStyle": this.validationState(),
        "onChange": this.handleChange
      })), React.createElement(FormItem, {
        "label": "参数:",
        "className": "col-offset-4"
      }, React.createElement(ReactBootstrap.Input, {
        "type": 'text',
        "className": "col-offset-1",
        "placeholder": "",
        "style": {
          width: 155
        },
        "onChange": this.handleParamChange
      }))), React.createElement(AccountKeyInput, Object.assign({}, this.props, {
        "ref": "accountin",
        "can_cb": this.handleUserChange
      })), React.createElement(Row, null, React.createElement(Col, {
        "span": "4",
        "offset": "18"
      }, React.createElement(Button, {
        "bsStyle": 'danger',
        "onClick": this.rank_delete,
        "disabled": this.state.player_to_send === "" || this.state.rank_name === ""
      }, "从排行榜上删除"))));
    }
  });

  module.exports = App;

}).call(this);
