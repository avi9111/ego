// Generated by CoffeeScript 1.12.7
(function() {
  var AccountKeyInput, AntButton, Api, App, Button, ButtonToolbar, DropdownButton, Icon, Input, ListGroup, ListGroupItem, MenuItem, Modal, ModalTrigger, Nav, NavItem, Navbar, React, ReactBootstrap, Table, Upload, antd;

  antd = require('antd');

  Api = require('../api/api_ajax');

  AccountKeyInput = require('../../common/account_input');

  React = require('react');

  ReactBootstrap = require('react-bootstrap');

  Upload = antd.Upload;

  Icon = antd.Icon;

  AntButton = antd.Button;

  ButtonToolbar = ReactBootstrap.ButtonToolbar;

  Button = ReactBootstrap.Button;

  MenuItem = ReactBootstrap.MenuItem;

  DropdownButton = ReactBootstrap.DropdownButton;

  Table = ReactBootstrap.Table;

  ModalTrigger = ReactBootstrap.ModalTrigger;

  Modal = ReactBootstrap.Modal;

  Navbar = ReactBootstrap.Navbar;

  Nav = ReactBootstrap.Nav;

  NavItem = ReactBootstrap.NavItem;

  Input = ReactBootstrap.Input;

  ListGroup = ReactBootstrap.ListGroup;

  ListGroupItem = ReactBootstrap.ListGroupItem;

  App = React.createClass({displayName: "App",
    getInitialState: function() {
      return {
        select_server: this.props.curr_server,
        acid1: "",
        acid2: ""
      };
    },
    isServerRight: function() {
      return (this.state.select_server != null) && (this.state.select_server.serverName != null);
    },
    isAccountRight: function() {
      return (this.refs.accountin != null) && this.refs.accountin.IsRight();
    },
    getLoadingState: function() {
      if (!this.isServerRight() || !this.isAccountRight()) {
        return "disabled";
      }
      return '';
    },
    handleServerChange: function(data) {
      console.log(data);
      this.setState({
        select_server: data
      });
      return setTimeout(this.OnSend, 100);
    },
    handleUserChange1: function(data) {
      console.log(data);
      if (data === "") {
        data = "请输入玩家Id";
      }
      return this.setState({
        acid1: data
      });
    },
    handleUserChange2: function(data) {
      console.log(data);
      if (data === "") {
        data = "请输入玩家Id";
      }
      return this.setState({
        acid2: data
      });
    },
    getServerName: function() {
      if (this.state.select_server != null) {
        return this.state.select_server.name;
      } else {
        return "";
      }
    },
    post: function(url, params) {
      var opt, temp, x;
      temp = document.createElement('form');
      temp.action = url;
      temp.method = 'post';
      temp.style.display = 'none';
      for (x in params) {
        opt = document.createElement('input');
        opt.name = x;
        opt.value = params[x];
        temp.appendChild(opt);
      }
      document.body.appendChild(temp);
      temp.submit();
      return temp;
    },
    query: function() {
      var acidArray, api;
      acidArray = [this.state.acid1, this.state.acid2];
      api = new Api();
      console.log(this.state.send);
      return api.Typ("transDevice").ServerID(this.state.select_server.serverName).AccountID("AID").Key(this.props.curr_key).ParamArray(acidArray).Do((function(_this) {
        return function(result) {
          console.log("onSend");
          console.log(result);
          return _this.setState({
            res: JSON.parse(result)
          });
        };
      })(this));
    },
    render: function() {
      return React.createElement("div", null, React.createElement(AccountKeyInput, Object.assign({}, this.props, {
        "ref": "accountin",
        "can_cb": this.handleUserChange1
      })), React.createElement(AccountKeyInput, Object.assign({}, this.props, {
        "ref": "accountin",
        "can_cb": this.handleUserChange2
      })), React.createElement(Button, {
        "bsStyle": 'primary',
        "onClick": this.query
      }, "替换"));
    }
  });

  module.exports = App;

}).call(this);
