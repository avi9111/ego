// Generated by CoffeeScript 1.12.7
(function() {
  var Api, InputNumber, Modal, React, Select, VirTrueIAP, antd;

  antd = require('antd');

  React = require('react');

  Modal = antd.Modal;

  InputNumber = antd.InputNumber;

  Api = require('../api/api_ajax');

  Select = antd.Select;

  VirTrueIAP = React.createClass({displayName: "VirTrueIAP",
    getInitialState: function() {
      var ss_init;
      ss_init = {};
      ss_init["0"] = "Andriod";
      ss_init["1"] = "IOS";
      return {
        loading: false,
        visible: false,
        hc_add: 1,
        iap: 0,
        oper_showstate: "1",
        shard_show_state_const: ss_init
      };
    },
    showModal: function() {
      return this.setState({
        visible: true
      });
    },
    handleOk: function() {
      this.setState({
        loading: true
      });
      this.setState({
        loading: false,
        visible: false
      });
      return this.sendtrueiap();
    },
    handleCancel: function() {
      return this.setState({
        visible: false
      });
    },
    sendtrueiap: function() {
      var api;
      if (this.state.hc_add <= 0) {
        this.props.onSend();
        return;
      }
      api = new Api();
      return api.Typ("virtualtrueIAP").ServerID(this.props.server_id).AccountID(this.props.account_id).Key(this.props.curr_key).Params(this.state.hc_add, this.state.iap, this.state.oper_showstate).Do((function(_this) {
        return function(result) {
          _this.setState({
            mails: JSON.parse(result),
            is_loading: false
          });
          console.log("onSend");
          return _this.props.onSend();
        };
      })(this));
    },
    handleRewardChange: function(count) {
      this.setState({
        hc_add: parseInt(count, 10)
      });
      console.log("handleRewardChange");
      return console.log(count);
    },
    handleIAPChange: function(count) {
      this.setState({
        iap: parseInt(count, 10)
      });
      console.log("handleIAP");
      return console.log(count);
    },
    onSelectChange: function(value) {
      console.log(value);
      return this.setState({
        oper_showstate: value
      });
    },
    select_op: function() {
      var k, ref, res, v;
      res = [];
      ref = this.state.shard_show_state_const;
      for (k in ref) {
        v = ref[k];
        res.push(React.createElement(Option, {
          "value": k
        }, v));
      }
      return res;
    },
    render: function() {
      var base;
      return React.createElement("div", null, React.createElement(antd.Button, {
        "className": "ant-btn ant-btn-primary",
        "onClick": this.showModal
      }, this.props.modal_name), React.createElement(Modal, {
        "visible": this.state.visible,
        "title": "发送真实模拟充值邮件",
        "onOk": this.handleOk,
        "onCancel": this.handleCancel,
        "width": 700,
        "footer": [
          React.createElement(antd.Button, {
            "key": "back",
            "className": "ant-btn",
            "onClick": this.handleCancel
          }, "返 回"), React.createElement(antd.Button, {
            "key": "submit",
            "className": "ant-btn ant-btn-primary",
            "onClick": this.handleOk
          }, "提 交", React.createElement("i", {
            "className": 'anticon anticon-loading' + (typeof (base = this.state).loading === "function" ? base.loading({
              '': 'hide'
            }) : void 0)
          }))
        ]
      }, React.createElement("p", null, "已经发送的IAP充值邮件可以在单人邮件中查询"), React.createElement("p", null, "充值ID:(通过IAP表中的IAPMAIN sheet 中的第一列ID，)"), React.createElement(InputNumber, {
        "min": 1,
        "max": 1000000,
        "defaultValue": 1,
        "onChange": this.handleRewardChange,
        "style": {
          width: 70
        }
      }), React.createElement("p", null, "价钱(通过IAP表中的IAPBASE sheet 中的人民币价格一列，钱数要与所充值的物品对应，否则无效):"), React.createElement(InputNumber, {
        "defaultValue": 0,
        "onChange": this.handleIAPChange,
        "style": {
          width: 70
        }
      }), React.createElement("p", null, "IOS or Android"), React.createElement(Select, {
        "defaultValue": this.state.oper_showstate,
        "style": {
          width: 120
        },
        "onChange": this.onSelectChange
      }, this.select_op())));
    }
  });

  module.exports = VirTrueIAP;

}).call(this);
