// Generated by CoffeeScript 1.12.7
(function() {
  var $,Api, React, SysRollNotice, App;

  Api = require('../api/api_ajax');

  React = require('react');

  App = require('./index');

  $ = require('jquery')

  SysRollNotice = (function() {
    function SysRollNotice(json) {
      var ref;
      this.json = json;
      this.begin = this.json.begin;
      this.end = this.json.end;
      this.id = this.json.id;
      this.interval = this.json.interval;
      this.state = this.json.command.params[3];
      this.title = this.json.command.params[4];
      this.info = this.json.command.params[5];
      this.multi_lang = this.json.command.params[7];
      this.language = this.json.command.params[8];
      this.server_id = this.json.command.server;
      ref = this.server_id.split(':'), this.gid = ref[0], this.sid = ref[1];
    }

    SysRollNotice.prototype.Log = function() {
      return console.log(this);
    };


    SysRollNotice.prototype.getLocalTime = function (i) {
        if (typeof i !== 'number') return;
        var d = new Date();
        var len = d.getTime();
        var offset = d.getTimezoneOffset() * 60000;
        var utcTime = len + offset;
        return new Date(utcTime + 3600000 * i);
    };

    SysRollNotice.prototype.State = function() {
        $.ajaxSetup({
            async : false  //这一行的作用是设置同步还是异步，true表示异步，false表示同步
        });
        $.get("../api/v1/init", (function(_this) {
            return function(result) {
                var serv;
                serv = JSON.parse(result);
                if (serv.TimeZone === "Asia/Ho_Chi_Minh"){
                    return _this.curr_time = 7
                }else if (serv.TimeZone === "Asia/Shanghai"){
                    return _this.curr_time = 8
                }else if (serv.TimeZone === "Asia/Seoul"){
                    return _this.curr_time = 9
                }
            };
        })(this));
      var begin_t, end_t, now_t;
        if (this.state === "0") {
        return "未发布";
      }
      now_t = this.__proto__.getLocalTime(this.curr_time);
      begin_t = new Date(this.json.command.params[0]);
      end_t = new Date(this.json.command.params[1]);
      if ((begin_t <= now_t && now_t < end_t)) {
        return "已发布";
      }
      if (now_t >= end_t) {
        return "已过期";
      }
      if (now_t < begin_t) {
        return "未到期";
      }
    };

    SysRollNotice.prototype.ChangeState = function() {
      if (this.state === "0") {
        return this.state = "1";
      } else {
        return this.state = "0";
      }
    };

    SysRollNotice.prototype.UpdateToServer = function(server_id, account_id, curr_key, cb) {
      var api, day, end, end_day_time, hours, minutes, month, seconds, start, start_day_time, year;
      console.log(this);
      console.log("curr_key");
      console.log(curr_key);
      api = new Api();
      if (this.begin >= 10000000000) {
        start = new Date(this.begin);
        hours = (start.getHours()).toString();
      } else {
        start = new Date(this.begin * 1000);
        hours = (start.getHours()).toString();
      }
      year = start.getFullYear();
      month = (start.getMonth() + 1).toString();
      day = start.getDate().toString();
      minutes = start.getMinutes().toString();
      seconds = start.getSeconds().toString();
      if (month.length === 1) {
        month = '0' + month;
      }
      if (day.length === 1) {
        day = '0' + day;
      }
      if (hours.length === 1) {
        hours = '0' + hours;
      }
      if (minutes.length === 1) {
        minutes = '0' + minutes;
      }
      if (seconds.length === 1) {
        seconds = '0' + seconds;
      }
      start_day_time = year + "/" + month + "/" + day + " " + hours + ":" + minutes + ":" + seconds;
      if (this.end >= 10000000000) {
        end = new Date(this.end);
        hours = (end.getHours()).toString();
      } else {
        end = new Date(this.end * 1000);
        hours = (end.getHours()).toString();
      }
      console.log(end);
      year = end.getFullYear();
      month = (end.getMonth() + 1).toString();
      day = end.getDate().toString();
      minutes = end.getMinutes().toString();
      seconds = end.getSeconds().toString();
      if (month.length === 1) {
        month = '0' + month;
      }
      if (day.length === 1) {
        day = '0' + day;
      }
      if (hours.length === 1) {
        hours = '0' + hours;
      }
      if (minutes.length === 1) {
        minutes = '0' + minutes;
      }
      if (seconds.length === 1) {
        seconds = '0' + seconds;
      }
      end_day_time = year + "/" + month + "/" + day + " " + hours + ":" + minutes + ":" + seconds;
      return api.Typ("updateSysRollNotice").ServerID(server_id).AccountID(account_id).Key(curr_key).Params(start_day_time, end_day_time, this.interval, this.state, this.title, this.info, this.id, this.multi_lang, JSON.stringify(this.language)).Do((function(_this) {
        return function(result) {
          console.log(result);
          if (cb != null) {

            return cb();
          }
        };
      })(this));
    };

    SysRollNotice.prototype.NewToServer = function(server_id, account_id, curr_key, cb) {
      var api, day, end, end_day_time, hours, minutes, month, seconds, start, start_day_time, year;
      api = new Api();
      start = new Date(this.begin);
      year = start.getFullYear();
      month = (start.getMonth() + 1).toString();
      day = start.getDate().toString();
      hours = (start.getHours()).toString();
      minutes = start.getMinutes().toString();
      seconds = start.getSeconds().toString();
      if (month.length === 1) {
        month = '0' + month;
      }
      if (day.length === 1) {
        day = '0' + day;
      }
      if (hours.length === 1) {
        hours = '0' + hours;
      }
      if (minutes.length === 1) {
        minutes = '0' + minutes;
      }
      if (seconds.length === 1) {
        seconds = '0' + seconds;
      }
      start_day_time = year + "/" + month + "/" + day + " " + hours + ":" + minutes + ":" + seconds;
      end = new Date(this.end);
      year = end.getFullYear();
      month = (end.getMonth() + 1).toString();
      day = end.getDate().toString();
      hours = (end.getHours()).toString();
      minutes = end.getMinutes().toString();
      seconds = end.getSeconds().toString();
      if (month.length === 1) {
        month = '0' + month;
      }
      if (day.length === 1) {
        day = '0' + day;
      }
      if (hours.length === 1) {
        hours = '0' + hours;
      }
      if (minutes.length === 1) {
        minutes = '0' + minutes;
      }
      if (seconds.length === 1) {
        seconds = '0' + seconds;
      }
      end_day_time = year + "/" + month + "/" + day + " " + hours + ":" + minutes + ":" + seconds;
      return api.Typ("sendSysRollNotice").ServerID(server_id).AccountID(account_id).Key(curr_key).Params(start_day_time, end_day_time, this.interval, this.state, this.title, this.info, this.id, this.multi_lang, JSON.stringify(this.language)).Do((function(_this) {
        return function(result) {
          if (cb != null) {
            return cb();
          }
        };
      })(this));
    };

    return SysRollNotice;

  })();

  module.exports = SysRollNotice;

}).call(this);
