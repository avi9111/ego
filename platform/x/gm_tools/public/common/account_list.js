// Generated by CoffeeScript 1.12.7
(function() {
  var AccountList, Button, FileInput, Icon, InputNumber, MaxAccountCount, React, Row, Table, Upload, antd, boot;

  antd = require('antd');

  boot = require('react-bootstrap');

  React = require('react');

  FileInput = require('react-file-input');

  InputNumber = antd.InputNumber;

  Row = antd.Row;

  Table = boot.Table;

  Upload = antd.Upload;

  Icon = antd.Icon;

  Button = antd.Button;

  MaxAccountCount = 50;

  AccountList = React.createClass({displayName: "AccountList",
    getInitialState: function() {
      return {
        accounts: [],
        curr_id: null
      };
    },
    onInputActChange: function(event) {
      return this.setState({
        curr_id: event.target.value
      });
    },
    addAccount: function() {
      var id, r;
      id = this.state.curr_id;
      r = this.state.accounts;
      r.push(id);
      this.setState({
        accounts: r
      });
      if (this.props.onChange != null) {
        return this.props.onChange(r);
      }
    },
    cannotAddAccount: function() {},
    getAddButton: function() {
      if ((this.state.curr_id != null) && this.state.curr_id !== "" && this.state.accounts.length < MaxAccountCount) {
        return React.createElement("button", {
          "className": "ant-btn ant-btn-primary",
          "onClick": this.addAccount
        }, "增加");
      } else {
        return React.createElement("button", {
          "className": "ant-btn disable",
          "onClick": this.cannotAddAccount
        }, "增加");
      }
    },
    del: function(k) {
      return (function(_this) {
        return function() {
          var ki, nr, ref, v;
          nr = [];
          ref = _this.state.accounts;
          for (ki in ref) {
            v = ref[ki];
            if (ki !== k) {
              nr.push(v);
            }
          }
          _this.setState({
            accounts: nr
          });
          if (_this.props.onChange != null) {
            return _this.props.onChange(nr);
          }
        };
      })(this);
    },
    getAllInfo: function(data) {
      var k, re, v;
      if (data == null) {
        return React.createElement("div", null, "UnKnown Info");
      }
      re = [];
      for (k in data) {
        v = data[k];
        re.push(React.createElement("tr", {
          "key": k
        }, React.createElement("td", null, v), React.createElement("td", null, React.createElement(boot.Button, {
          "bsStyle": 'danger',
          "disabled": false,
          "onClick": this.del(k)
        }, "删除"))));
      }
      return re;
    },
    handleCSVFileChange: function(info) {
      var reader, self;
      if (info.file.status !== 'uploading') {
        reader = new FileReader();
        self = this;
        reader.onload = function() {
          var k, r, res, v;
          console.log(this.result);
          res = this.result.split('\n');
          console.log('Selected file:', res);
          r = self.state.accounts;
          for (k in res) {
            v = res[k];
            if (r.length < 50 && v !== "") {
              r.push(v);
            }
          }
          console.log('Selected file:', r);
          self.setState({
            accounts: r
          });
          if (self.props.onChange != null) {
            self.props.onChange(r);
          }
        };
        return reader.readAsText(info.file.originFileObj);
      }
    },
    getAccountList: function() {
      return React.createElement(Table, {
        "striped": true,
        "bordered": true,
        "condensed": true,
        "hover": true
      }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, "AccountID"), React.createElement("th", null, "操作"))), React.createElement("tbody", null, this.getAllInfo(this.state.accounts)));
    },
    render: function() {
      return React.createElement("div", null, React.createElement("div", {
        "className": "row-flex row-flex-middle row-flex-start"
      }, React.createElement("div", null, "AccountID:"), React.createElement("input", {
        "span": "8",
        "className": "ant-input",
        "type": "text",
        "id": "ItemID",
        "placeholder": "请输入AccountID",
        "onChange": this.onInputActChange
      }), this.getAddButton(), React.createElement(Upload, {
        "onChange": this.handleCSVFileChange
      }, React.createElement(Button, {
        "type": "ghost"
      }, React.createElement(Icon, {
        "type": "upload"
      }), " 点击加载文件")), React.createElement("div", null, "加载文件是txt文件,每一行(\\n分隔)是一个AccountID,类似于\"0:10:XXXX\"这样的")), React.createElement("hr", null), this.getAccountList());
    }
  });

  module.exports = AccountList;

}).call(this);
