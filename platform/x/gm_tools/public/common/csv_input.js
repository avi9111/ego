// Generated by CoffeeScript 1.12.7
(function() {
  var CSVInput, Input, React, Table, boot;

  boot = require('react-bootstrap');

  React = require('react');

  Input = boot.Input;

  Table = boot.Table;

  CSVInput = React.createClass({displayName: "CSVInput",
    getInitialState: function() {
      return {
        texts: "",
        values: []
      };
    },
    componentWillReceiveProps: function(nextProps) {
      var res;
      console.log("componentWillReceiveProps " + nextProps.title);
      if (this.state.texts !== nextProps.value) {
        res = this.mkValues(nextProps.value);
        return this.setState({
          texts: nextProps.value,
          values: res
        });
      }
    },
    IsRight: function() {
      var idx, ref, res, v;
      res = true;
      ref = this.state.values;
      for (idx in ref) {
        v = ref[idx];
        res = res && (this.validationState(v) === 'success');
      }
      return res;
    },
    validationState: function(value) {
      if (value != null) {
        return 'success';
      } else {
        return 'error';
      }
    },
    handleChange: function() {
      var res, v;
      console.log("handleChange");
      v = this.refs.input.getValue();
      res = this.mkValues(v);
      console.log(res);
      this.setState({
        values: res
      });
      console.log(v);
      this.setState({
        texts: v
      });
      return this.props.can_cb(res, v, this.IsRight());
    },
    mkValues: function(texts) {
      var t;
      t = texts.split('\n');
      return t.map(function(v) {
        return v.split(';');
      });
    },
    getTable: function() {
      return React.createElement(Table, Object.assign({}, this.props, {
        "striped": true,
        "bordered": true,
        "condensed": true,
        "hover": true
      }), React.createElement("tbody", null, this.state.values.map(function(v) {
        return React.createElement("tr", {
          "key": v.join("-")
        }, v.map(function(t) {
          return React.createElement("td", null, t);
        }));
      })));
    },
    render: function() {
      return React.createElement("div", {
        "className": "row-flex row-flex-start"
      }, React.createElement(Input, {
        "ref": "input",
        "type": "textarea",
        "label": this.props.title,
        "value": this.state.texts,
        "onChange": this.handleChange
      }), this.getTable());
    }
  });

  module.exports = CSVInput;

}).call(this);
