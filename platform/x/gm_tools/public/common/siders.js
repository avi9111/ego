// Generated by CoffeeScript 1.12.7
(function() {
  var $, Menu, Select, TimeSetPick, React, ServerPicker, ServerSelector, ServerSelectors, Sider, StateMenu, SubMenu, antd;

  antd = require('antd');

  Menu = antd.Menu;

  SubMenu = Menu.SubMenu;

  React = require('react');

  Select = antd.Select;

  $ = require('jquery')

  Sider = React.createClass({displayName: "Sider",
    getInitialState: function() {
      return {
        current: '1'
      };
    },
    handleClick: function(e) {
      console.log('click ', e);
      this.setState({
        current: e.key
      });
      return this.props.handleClick(e);
    },
    mkMenu: function(k, v) {
      return React.createElement(Menu.Item, {
        "key": k
      }, k);
    },
    mkFuncCommands: function() {
      var k, ref, res, v;
      res = [];
      ref = this.props.func_commands;
      for (k in ref) {
        v = ref[k];
        res.push(this.mkMenu(k, v));
      }
      console.log(res);
      console.log(this.props.func_commands);
      return res;
    },
    mkActivityCommands: function() {
      var k, ref, res, v;
      res = [];
      ref = this.props.activity_commands;
      for (k in ref) {
        v = ref[k];
        res.push(this.mkMenu(k, v));
      }
      return res;
    },
    mkServerCommands: function() {
      var k, ref, res, v;
      res = [];
      ref = this.props.server_commands;
      for (k in ref) {
        v = ref[k];
        res.push(this.mkMenu(k, v));
      }
      return res;
    },
    mkAuthCommands: function() {
      var k, ref, res, v;
      res = [];
      ref = this.props.auth_commands;
      for (k in ref) {
        v = ref[k];
        this.mkMenu(k, v);
      }
      return res;
    },

    render: function() {
      return React.createElement(Menu, {
        "onClick": this.handleClick,
        "defaultOpenKeys": ['sub1', 'sub2', 'sub4', 'sub5'],
        "mode": "inline"
      }, React.createElement(SubMenu, {
        "key": "sub1",
        "title": React.createElement("span", null, React.createElement("i", {
          "className": "anticon anticon-mail"
        }), React.createElement("span", null, " 功能管理 "))
      }, this.mkFuncCommands()), React.createElement(SubMenu, {
        "key": "sub2",
        "title": React.createElement("span", null, React.createElement("i", {
          "className": "anticon anticon-appstore"
        }), React.createElement("span", null, " 活动管理 "))
      }, this.mkActivityCommands()), React.createElement(SubMenu, {
        "key": "sub4",
        "title": React.createElement("span", null, React.createElement("i", {
          "className": "anticon anticon-laptop"
        }), React.createElement("span", null, " 服务器同步 "))
      }, this.mkServerCommands()), React.createElement(SubMenu, {
        "key": "sub5",
        "title": React.createElement("span", null, React.createElement("i", {
          "className": "anticon anticon-setting"
        }), React.createElement("span", null, " 账号权限管理 "))
      }, this.mkAuthCommands()));
    }
  });

  ServerSelectors = require('../common/server_selector');

  ServerSelector = ServerSelectors.ServerSelector;

  ServerPicker = ServerSelectors.ServerPicker;

  StateMenu = React.createClass({displayName: "StateMenu",
    getInitialState: function() {

        $.get("../api/v1/init", function(_this) {
                return function(result) {
                    var serv;
                    serv = JSON.parse(result);
                    console.log(_this);
                    if (serv.TimeZone === "Asia/Ho_Chi_Minh"){
                        return _this.setState({
                            time_area:"东7区 越南时间"
                        })
                    }else if (serv.TimeZone === "Asia/Shanghai"){
                        return _this.setState({
                            time_area:"东8区 北京时间"
                        })
                    }else if (serv.TimeZone === "Asia/Seoul"){
                        return _this.setState({
                            time_area:"东9区 韩国时间"
                        })
                    }
                };
            }(this));

      return {
        current: 'mail',

      };
    },
      handleClick: function(e) {
      console.log('click ', e);
      this.setState({
        current: e.key
      });
      if (e.key === "logout") {
        return this.props.handleLogout();
      }
    },
      timeSetId:function (value) {
       return this.props.timeId = value;
      },
      handleTimeServerChange: function(e) {
          return this.props.handleTimeServerChange(e);
      },

    handleServerChange: function(e) {
      return this.props.handleServerChange(e);
    },

    render: function() {
      return React.createElement(Menu, {
        "onClick": this.handleClick,
        "selectedKeys": [],
        "mode": "horizontal"
      }, React.createElement(Menu.Item, {
        "key": "server"
      }, React.createElement("i", {
        "className": "anticon anticon-mail"
      }), "选择服务器", React.createElement(ServerSelector, {
        "handleChange": this.handleServerChange
      })), React.createElement(Menu.Item, {
        "key": "logout"
      }, React.createElement("i", {
        "className": "anticon anticon-mail"
      }), "登出"),React.createElement("span",{
              "style":{
                  width:180,
                  height:30,
                  borderRadius:10,
                  textAlign:"center",
              }}, "当前时区是",this.state.time_area)
          )
    }
  });
  module.exports = {
    Sider: Sider,
    StateMenu: StateMenu
  };

}).call(this);
