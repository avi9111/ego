// Generated by CoffeeScript 1.12.7
(function() {
  var $, Option, React, Select, ServerPicker, ServerSelector, antd;

  antd = require('antd');

  React = require('react');

  $ = require('jquery');

  Select = antd.Select;

  Option = Select.Option;

  ServerSelector = React.createClass({displayName: "ServerSelector",
    getInitialState: function() {
      return {
        servers: [],
        servers_cfg: {}
      };
    },
    handleChange: function(name) {
      return this.props.handleChange(this.state.servers_cfg[name]);
    },
    addOneServerOption: function(data) {
      var name;
      name = data.name.toString();
      return React.createElement(Option, {
        "key": name,
        "value": name
      }, name);
    },
    getAllProfileToSelect: function() {
      return React.createElement(Select, {
        "showSearch": false,
        "style": {
          width: 300
        },
        "onChange": this.handleChange
      }, this.state.servers.map(this.addOneServerOption));
    },
    componentDidMount: function() {
      return $.get("../api/v1/server_cfg_all", (function(_this) {
        return function(result) {
          var cfg, i, len, s, serv;
          serv = JSON.parse(result);
          cfg = {};
          for (i = 0, len = serv.length; i < len; i++) {
            s = serv[i];
            cfg[s.name] = s;
          }
          return _this.setState({
            servers: serv,
            servers_cfg: cfg
          });
        };
      })(this));
    },
    render: function() {
      return this.getAllProfileToSelect();
    }
  });

  ServerPicker = React.createClass({displayName: "ServerPicker",
    getInitialState: function() {
      return {
        servers: []
      };
    },
    handleChange: function(data) {
      return this.props.handleChange(data);
    },
    addOneServerOption: function(data) {
      return React.createElement(Option, {
        "value": data.name.toString()
      }, data);
    },
    getAllProfileToSelect: function() {
      return React.createElement(Select, {
        "multiple": true,
        "showSearch": true,
        "style": {
          width: 300
        },
        "onChange": this.handleChange
      }, this.state.servers.map(this.addOneServerOption));
    },
    componentDidMount: function() {
      return $.get("../api/v1/server_cfg_all", (function(_this) {
        return function(result) {
          return _this.setState({
            servers: JSON.parse(result)
          });
        };
      })(this));
    },
    render: function() {
      return this.getAllProfileToSelect();
    }
  });

  module.exports = {
    ServerSelector: ServerSelector,
    ServerPicker: ServerPicker
  };

}).call(this);
