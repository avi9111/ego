// Generated by CoffeeScript 1.11.1
(function() {
  var ChatClient, DefaultRoomKey, ws_host;

  DefaultRoomKey = "all";

  ws_host = "ws://10.0.1.221:10010/ws";

  ChatClient = React.createClass({displayName: "ChatClient",
    getInitialState: function() {
      var e, pre, u;
      u = window.location.href;
      pre = "http://";
      e = u.indexOf("/", pre.length);
      ws_host = "ws://" + u.substring(pre.length, e) + "/ws";
      return {
        room_key: "0",
        state: "init",
        chat_history: [],
        value: "Enter..."
      };
    },
    componentDidMount: function() {
      var conn;
      if (window["WebSocket"] != null) {
        conn = new WebSocket(ws_host);
        conn.onclose = (function(_this) {
          return function(evt) {
            return _this.setState({
              state: "connect_close"
            });
          };
        })(this);
        conn.onmessage = (function(_this) {
          return function(evt) {
            return _this.addMsg(false, evt.data);
          };
        })(this);
        conn.onopen = (function(_this) {
          return function() {
            return conn.send("Reg:" + DefaultRoomKey + ":WebChater" + _this.guid());
          };
        })(this);
        this.setState({
          conn: conn
        });
      } else {
        this.setState({
          state: "NoWebSocket"
        });
      }
    },
    addMsg: function(is_myself, msg) {
      var his;
      his = this.state.chat_history;
      his.push({
        sender: is_myself ? "Me:" : "Other:",
        text: msg
      });
      return this.setState({
        chat_history: his
      });
    },
    mkHistoryItem: function(msg) {
      return React.createElement("div", {
        "id": "msg"
      }, React.createElement("p", null, " ", React.createElement("strong", null, " ", msg.sender, " "), "  ", msg.text, " "));
    },
    getHistory: function() {
      return this.state.chat_history.map(this.mkHistoryItem);
    },
    sendMsg: function() {
      var msg;
      msg = this.refs.msg_input.getValue();
      this.state.conn.send("Say:" + DefaultRoomKey + ":" + msg);
      return this.addMsg(true, msg);
    },
    guid: function() {
      var s4;
      s4 = (function(_this) {
        return function() {
          return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
        };
      })(this);
      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    },
    render: function() {
      return React.createElement("div", null, React.createElement("p", {
        "id": "history",
        "ref": "history"
      }, this.getHistory()), React.createElement("div", null, React.createElement("div", {
        "id": "sender"
      }, React.createElement(Input, {
        "type": 'text',
        "ref": 'msg_input'
      }), React.createElement(Button, {
        "bsStyle": 'primary',
        "onClick": this.sendMsg
      }, "Send"), React.createElement(Button, {
        "bsStyle": 'primary',
        "onClick": this.sendMsg
      }, "Clean"))));
    }
  });

  React.render(React.createElement(ChatClient, null), document.getElementById('chater'));

}).call(this);
