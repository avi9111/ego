// automatically generated by the FlatBuffers compiler, do not modify

namespace gen
{

using System;
using FlatBuffers;

public sealed class RoleInfo : Table {
  public static RoleInfo GetRootAsRoleInfo(ByteBuffer _bb) { return GetRootAsRoleInfo(_bb, new RoleInfo()); }
  public static RoleInfo GetRootAsRoleInfo(ByteBuffer _bb, RoleInfo obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public RoleInfo __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string AccountId { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetAccountIdBytes() { return __vector_as_arraysegment(4); }
  public string Name { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(6); }
  public int Level { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int Vip { get { int o = __offset(10); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int Gs { get { int o = __offset(12); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int Role { get { int o = __offset(14); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public string GetEquips(int j) { int o = __offset(16); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int EquipsLength { get { int o = __offset(16); return o != 0 ? __vector_len(o) : 0; } }
  public string Guild { get { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetGuildBytes() { return __vector_as_arraysegment(18); }
  public string Title { get { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetTitleBytes() { return __vector_as_arraysegment(20); }
  public long TitleTimeout { get { int o = __offset(22); return o != 0 ? bb.GetLong(o + bb_pos) : (long)0; } }
  public int CharStarLevel { get { int o = __offset(24); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int WeaponStarLevel { get { int o = __offset(26); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public RolePos RolePos { get { return GetRolePos(new RolePos()); } }
  public RolePos GetRolePos(RolePos obj) { int o = __offset(28); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }
  public int Swing { get { int o = __offset(30); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int MagicPetfigure { get { int o = __offset(32); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<RoleInfo> CreateRoleInfo(FlatBufferBuilder builder,
      StringOffset account_idOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      int level = 0,
      int vip = 0,
      int gs = 0,
      int role = 0,
      VectorOffset equipsOffset = default(VectorOffset),
      StringOffset guildOffset = default(StringOffset),
      StringOffset titleOffset = default(StringOffset),
      long title_timeout = 0,
      int char_star_level = 0,
      int weapon_star_level = 0,
      Offset<RolePos> role_posOffset = default(Offset<RolePos>),
      int swing = 0,
      int magicPetfigure = 0) {
    builder.StartObject(15);
    RoleInfo.AddTitleTimeout(builder, title_timeout);
    RoleInfo.AddMagicPetfigure(builder, magicPetfigure);
    RoleInfo.AddSwing(builder, swing);
    RoleInfo.AddRolePos(builder, role_posOffset);
    RoleInfo.AddWeaponStarLevel(builder, weapon_star_level);
    RoleInfo.AddCharStarLevel(builder, char_star_level);
    RoleInfo.AddTitle(builder, titleOffset);
    RoleInfo.AddGuild(builder, guildOffset);
    RoleInfo.AddEquips(builder, equipsOffset);
    RoleInfo.AddRole(builder, role);
    RoleInfo.AddGs(builder, gs);
    RoleInfo.AddVip(builder, vip);
    RoleInfo.AddLevel(builder, level);
    RoleInfo.AddName(builder, nameOffset);
    RoleInfo.AddAccountId(builder, account_idOffset);
    return RoleInfo.EndRoleInfo(builder);
  }

  public static void StartRoleInfo(FlatBufferBuilder builder) { builder.StartObject(15); }
  public static void AddAccountId(FlatBufferBuilder builder, StringOffset accountIdOffset) { builder.AddOffset(0, accountIdOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(2, level, 0); }
  public static void AddVip(FlatBufferBuilder builder, int vip) { builder.AddInt(3, vip, 0); }
  public static void AddGs(FlatBufferBuilder builder, int gs) { builder.AddInt(4, gs, 0); }
  public static void AddRole(FlatBufferBuilder builder, int role) { builder.AddInt(5, role, 0); }
  public static void AddEquips(FlatBufferBuilder builder, VectorOffset equipsOffset) { builder.AddOffset(6, equipsOffset.Value, 0); }
  public static VectorOffset CreateEquipsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartEquipsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddGuild(FlatBufferBuilder builder, StringOffset guildOffset) { builder.AddOffset(7, guildOffset.Value, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset titleOffset) { builder.AddOffset(8, titleOffset.Value, 0); }
  public static void AddTitleTimeout(FlatBufferBuilder builder, long titleTimeout) { builder.AddLong(9, titleTimeout, 0); }
  public static void AddCharStarLevel(FlatBufferBuilder builder, int charStarLevel) { builder.AddInt(10, charStarLevel, 0); }
  public static void AddWeaponStarLevel(FlatBufferBuilder builder, int weaponStarLevel) { builder.AddInt(11, weaponStarLevel, 0); }
  public static void AddRolePos(FlatBufferBuilder builder, Offset<RolePos> rolePosOffset) { builder.AddOffset(12, rolePosOffset.Value, 0); }
  public static void AddSwing(FlatBufferBuilder builder, int swing) { builder.AddInt(13, swing, 0); }
  public static void AddMagicPetfigure(FlatBufferBuilder builder, int magicPetfigure) { builder.AddInt(14, magicPetfigure, 0); }
  public static Offset<RoleInfo> EndRoleInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RoleInfo>(o);
  }
};


}
