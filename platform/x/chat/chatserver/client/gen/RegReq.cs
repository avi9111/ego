// automatically generated by the FlatBuffers compiler, do not modify

namespace gen
{

using System;
using FlatBuffers;

public sealed class RegReq : Table {
  public static RegReq GetRootAsRegReq(ByteBuffer _bb) { return GetRootAsRegReq(_bb, new RegReq()); }
  public static RegReq GetRootAsRegReq(ByteBuffer _bb, RegReq obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public RegReq __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string Town { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetTownBytes() { return __vector_as_arraysegment(4); }
  public string ClientAuth { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetClientAuthBytes() { return __vector_as_arraysegment(6); }
  public RoleInfo RoleInfo { get { return GetRoleInfo(new RoleInfo()); } }
  public RoleInfo GetRoleInfo(RoleInfo obj) { int o = __offset(8); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }

  public static Offset<RegReq> CreateRegReq(FlatBufferBuilder builder,
      StringOffset townOffset = default(StringOffset),
      StringOffset client_authOffset = default(StringOffset),
      Offset<RoleInfo> role_infoOffset = default(Offset<RoleInfo>)) {
    builder.StartObject(3);
    RegReq.AddRoleInfo(builder, role_infoOffset);
    RegReq.AddClientAuth(builder, client_authOffset);
    RegReq.AddTown(builder, townOffset);
    return RegReq.EndRegReq(builder);
  }

  public static void StartRegReq(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddTown(FlatBufferBuilder builder, StringOffset townOffset) { builder.AddOffset(0, townOffset.Value, 0); }
  public static void AddClientAuth(FlatBufferBuilder builder, StringOffset clientAuthOffset) { builder.AddOffset(1, clientAuthOffset.Value, 0); }
  public static void AddRoleInfo(FlatBufferBuilder builder, Offset<RoleInfo> roleInfoOffset) { builder.AddOffset(2, roleInfoOffset.Value, 0); }
  public static Offset<RegReq> EndRegReq(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RegReq>(o);
  }
  public static void FinishRegReqBuffer(FlatBufferBuilder builder, Offset<RegReq> offset) { builder.Finish(offset.Value); }
};


}
